# Generated by Django 4.2.16 on 2024-12-04 09:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('cities_light', '0011_alter_city_country_alter_city_region_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProfileModel',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dateOfBirth', models.DateTimeField(blank=True, null=True)),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('adressLineOne', models.CharField(max_length=100)),
                ('addressLineTwo', models.CharField(max_length=100)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cities_light.city')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cities_light.country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=100)),
                ('parentUuid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='client.categorymodel')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('countryCode', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='OfferModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expirationDate', models.DateTimeField(blank=True, null=True)),
                ('currencyUuid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='client.currencymodel')),
            ],
        ),
        migrations.CreateModel(
            name='OrderModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.PositiveIntegerField(choices=[(0, 'New'), (1, 'Processing'), (2, 'Confirmed'), (3, 'Delivering'), (4, 'Received'), (5, 'Completed')], default=(0, 'New'))),
                ('fullAddress', models.CharField(default='', max_length=200)),
                ('contact', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ProductModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('description', models.TextField(blank=True, max_length=100)),
                ('details', models.TextField(blank=True)),
                ('categories', models.ManyToManyField(to='client.categorymodel')),
            ],
        ),
        migrations.CreateModel(
            name='SupplierModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnitModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('shortName', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='StockModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('receptionDate', models.DateTimeField()),
                ('expirationDate', models.DateTimeField(blank=True, null=True)),
                ('productUuid', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='client.productmodel')),
                ('supplierUuid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='client.suppliermodel')),
                ('unitUuid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='client.unitmodel')),
            ],
        ),
        migrations.AddField(
            model_name='productmodel',
            name='unitUuid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='client.unitmodel'),
        ),
        migrations.CreateModel(
            name='OrderOfferModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('offerUuid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='client.offermodel')),
                ('orderUuid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='client.ordermodel')),
            ],
        ),
        migrations.AddField(
            model_name='ordermodel',
            name='offers',
            field=models.ManyToManyField(through='client.OrderOfferModel', to='client.offermodel'),
        ),
        migrations.AddField(
            model_name='ordermodel',
            name='userUuid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='offermodel',
            name='stockUuid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='client.stockmodel'),
        ),
    ]
